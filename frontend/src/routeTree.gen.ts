/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProtectedWordAssistantRouteImport } from './routes/_protected/word-assistant'
import { Route as ProtectedSettingsRouteImport } from './routes/_protected/settings'
import { Route as ProtectedResponsiveDemoRouteImport } from './routes/_protected/responsive-demo'
import { Route as ProtectedReportsRouteImport } from './routes/_protected/reports'
import { Route as ProtectedOrganizationsRouteImport } from './routes/_protected/organizations'
import { Route as ProtectedMousRouteImport } from './routes/_protected/mous'
import { Route as ProtectedMonitoringRouteImport } from './routes/_protected/monitoring'
import { Route as ProtectedIntelligenceRouteImport } from './routes/_protected/intelligence'
import { Route as ProtectedForumsRouteImport } from './routes/_protected/forums'
import { Route as ProtectedExportRouteImport } from './routes/_protected/export'
import { Route as ProtectedEventsRouteImport } from './routes/_protected/events'
import { Route as ProtectedDataLibraryRouteImport } from './routes/_protected/data-library'
import { Route as ProtectedDashboardRouteImport } from './routes/_protected/dashboard'
import { Route as ProtectedCountriesRouteImport } from './routes/_protected/countries'
import { Route as ProtectedBriefsRouteImport } from './routes/_protected/briefs'
import { Route as ProtectedAnalyticsRouteImport } from './routes/_protected/analytics'
import { Route as ProtectedAccessibilityRouteImport } from './routes/_protected/accessibility'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedWordAssistantRoute = ProtectedWordAssistantRouteImport.update({
  id: '/word-assistant',
  path: '/word-assistant',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedSettingsRoute = ProtectedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedResponsiveDemoRoute = ProtectedResponsiveDemoRouteImport.update({
  id: '/responsive-demo',
  path: '/responsive-demo',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedReportsRoute = ProtectedReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedOrganizationsRoute = ProtectedOrganizationsRouteImport.update({
  id: '/organizations',
  path: '/organizations',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedMousRoute = ProtectedMousRouteImport.update({
  id: '/mous',
  path: '/mous',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedMonitoringRoute = ProtectedMonitoringRouteImport.update({
  id: '/monitoring',
  path: '/monitoring',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedIntelligenceRoute = ProtectedIntelligenceRouteImport.update({
  id: '/intelligence',
  path: '/intelligence',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedForumsRoute = ProtectedForumsRouteImport.update({
  id: '/forums',
  path: '/forums',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedExportRoute = ProtectedExportRouteImport.update({
  id: '/export',
  path: '/export',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedEventsRoute = ProtectedEventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedDataLibraryRoute = ProtectedDataLibraryRouteImport.update({
  id: '/data-library',
  path: '/data-library',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedDashboardRoute = ProtectedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedCountriesRoute = ProtectedCountriesRouteImport.update({
  id: '/countries',
  path: '/countries',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedBriefsRoute = ProtectedBriefsRouteImport.update({
  id: '/briefs',
  path: '/briefs',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAnalyticsRoute = ProtectedAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAccessibilityRoute = ProtectedAccessibilityRouteImport.update({
  id: '/accessibility',
  path: '/accessibility',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/accessibility': typeof ProtectedAccessibilityRoute
  '/analytics': typeof ProtectedAnalyticsRoute
  '/briefs': typeof ProtectedBriefsRoute
  '/countries': typeof ProtectedCountriesRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/data-library': typeof ProtectedDataLibraryRoute
  '/events': typeof ProtectedEventsRoute
  '/export': typeof ProtectedExportRoute
  '/forums': typeof ProtectedForumsRoute
  '/intelligence': typeof ProtectedIntelligenceRoute
  '/monitoring': typeof ProtectedMonitoringRoute
  '/mous': typeof ProtectedMousRoute
  '/organizations': typeof ProtectedOrganizationsRoute
  '/reports': typeof ProtectedReportsRoute
  '/responsive-demo': typeof ProtectedResponsiveDemoRoute
  '/settings': typeof ProtectedSettingsRoute
  '/word-assistant': typeof ProtectedWordAssistantRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/accessibility': typeof ProtectedAccessibilityRoute
  '/analytics': typeof ProtectedAnalyticsRoute
  '/briefs': typeof ProtectedBriefsRoute
  '/countries': typeof ProtectedCountriesRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/data-library': typeof ProtectedDataLibraryRoute
  '/events': typeof ProtectedEventsRoute
  '/export': typeof ProtectedExportRoute
  '/forums': typeof ProtectedForumsRoute
  '/intelligence': typeof ProtectedIntelligenceRoute
  '/monitoring': typeof ProtectedMonitoringRoute
  '/mous': typeof ProtectedMousRoute
  '/organizations': typeof ProtectedOrganizationsRoute
  '/reports': typeof ProtectedReportsRoute
  '/responsive-demo': typeof ProtectedResponsiveDemoRoute
  '/settings': typeof ProtectedSettingsRoute
  '/word-assistant': typeof ProtectedWordAssistantRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_protected/accessibility': typeof ProtectedAccessibilityRoute
  '/_protected/analytics': typeof ProtectedAnalyticsRoute
  '/_protected/briefs': typeof ProtectedBriefsRoute
  '/_protected/countries': typeof ProtectedCountriesRoute
  '/_protected/dashboard': typeof ProtectedDashboardRoute
  '/_protected/data-library': typeof ProtectedDataLibraryRoute
  '/_protected/events': typeof ProtectedEventsRoute
  '/_protected/export': typeof ProtectedExportRoute
  '/_protected/forums': typeof ProtectedForumsRoute
  '/_protected/intelligence': typeof ProtectedIntelligenceRoute
  '/_protected/monitoring': typeof ProtectedMonitoringRoute
  '/_protected/mous': typeof ProtectedMousRoute
  '/_protected/organizations': typeof ProtectedOrganizationsRoute
  '/_protected/reports': typeof ProtectedReportsRoute
  '/_protected/responsive-demo': typeof ProtectedResponsiveDemoRoute
  '/_protected/settings': typeof ProtectedSettingsRoute
  '/_protected/word-assistant': typeof ProtectedWordAssistantRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/accessibility'
    | '/analytics'
    | '/briefs'
    | '/countries'
    | '/dashboard'
    | '/data-library'
    | '/events'
    | '/export'
    | '/forums'
    | '/intelligence'
    | '/monitoring'
    | '/mous'
    | '/organizations'
    | '/reports'
    | '/responsive-demo'
    | '/settings'
    | '/word-assistant'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/accessibility'
    | '/analytics'
    | '/briefs'
    | '/countries'
    | '/dashboard'
    | '/data-library'
    | '/events'
    | '/export'
    | '/forums'
    | '/intelligence'
    | '/monitoring'
    | '/mous'
    | '/organizations'
    | '/reports'
    | '/responsive-demo'
    | '/settings'
    | '/word-assistant'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/login'
    | '/register'
    | '/_protected/accessibility'
    | '/_protected/analytics'
    | '/_protected/briefs'
    | '/_protected/countries'
    | '/_protected/dashboard'
    | '/_protected/data-library'
    | '/_protected/events'
    | '/_protected/export'
    | '/_protected/forums'
    | '/_protected/intelligence'
    | '/_protected/monitoring'
    | '/_protected/mous'
    | '/_protected/organizations'
    | '/_protected/reports'
    | '/_protected/responsive-demo'
    | '/_protected/settings'
    | '/_protected/word-assistant'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRoute: typeof ProtectedRouteWithChildren
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/word-assistant': {
      id: '/_protected/word-assistant'
      path: '/word-assistant'
      fullPath: '/word-assistant'
      preLoaderRoute: typeof ProtectedWordAssistantRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/settings': {
      id: '/_protected/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof ProtectedSettingsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/responsive-demo': {
      id: '/_protected/responsive-demo'
      path: '/responsive-demo'
      fullPath: '/responsive-demo'
      preLoaderRoute: typeof ProtectedResponsiveDemoRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/reports': {
      id: '/_protected/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ProtectedReportsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/organizations': {
      id: '/_protected/organizations'
      path: '/organizations'
      fullPath: '/organizations'
      preLoaderRoute: typeof ProtectedOrganizationsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/mous': {
      id: '/_protected/mous'
      path: '/mous'
      fullPath: '/mous'
      preLoaderRoute: typeof ProtectedMousRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/monitoring': {
      id: '/_protected/monitoring'
      path: '/monitoring'
      fullPath: '/monitoring'
      preLoaderRoute: typeof ProtectedMonitoringRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/intelligence': {
      id: '/_protected/intelligence'
      path: '/intelligence'
      fullPath: '/intelligence'
      preLoaderRoute: typeof ProtectedIntelligenceRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/forums': {
      id: '/_protected/forums'
      path: '/forums'
      fullPath: '/forums'
      preLoaderRoute: typeof ProtectedForumsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/export': {
      id: '/_protected/export'
      path: '/export'
      fullPath: '/export'
      preLoaderRoute: typeof ProtectedExportRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/events': {
      id: '/_protected/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof ProtectedEventsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/data-library': {
      id: '/_protected/data-library'
      path: '/data-library'
      fullPath: '/data-library'
      preLoaderRoute: typeof ProtectedDataLibraryRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/countries': {
      id: '/_protected/countries'
      path: '/countries'
      fullPath: '/countries'
      preLoaderRoute: typeof ProtectedCountriesRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/briefs': {
      id: '/_protected/briefs'
      path: '/briefs'
      fullPath: '/briefs'
      preLoaderRoute: typeof ProtectedBriefsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/analytics': {
      id: '/_protected/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof ProtectedAnalyticsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/accessibility': {
      id: '/_protected/accessibility'
      path: '/accessibility'
      fullPath: '/accessibility'
      preLoaderRoute: typeof ProtectedAccessibilityRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedAccessibilityRoute: typeof ProtectedAccessibilityRoute
  ProtectedAnalyticsRoute: typeof ProtectedAnalyticsRoute
  ProtectedBriefsRoute: typeof ProtectedBriefsRoute
  ProtectedCountriesRoute: typeof ProtectedCountriesRoute
  ProtectedDashboardRoute: typeof ProtectedDashboardRoute
  ProtectedDataLibraryRoute: typeof ProtectedDataLibraryRoute
  ProtectedEventsRoute: typeof ProtectedEventsRoute
  ProtectedExportRoute: typeof ProtectedExportRoute
  ProtectedForumsRoute: typeof ProtectedForumsRoute
  ProtectedIntelligenceRoute: typeof ProtectedIntelligenceRoute
  ProtectedMonitoringRoute: typeof ProtectedMonitoringRoute
  ProtectedMousRoute: typeof ProtectedMousRoute
  ProtectedOrganizationsRoute: typeof ProtectedOrganizationsRoute
  ProtectedReportsRoute: typeof ProtectedReportsRoute
  ProtectedResponsiveDemoRoute: typeof ProtectedResponsiveDemoRoute
  ProtectedSettingsRoute: typeof ProtectedSettingsRoute
  ProtectedWordAssistantRoute: typeof ProtectedWordAssistantRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAccessibilityRoute: ProtectedAccessibilityRoute,
  ProtectedAnalyticsRoute: ProtectedAnalyticsRoute,
  ProtectedBriefsRoute: ProtectedBriefsRoute,
  ProtectedCountriesRoute: ProtectedCountriesRoute,
  ProtectedDashboardRoute: ProtectedDashboardRoute,
  ProtectedDataLibraryRoute: ProtectedDataLibraryRoute,
  ProtectedEventsRoute: ProtectedEventsRoute,
  ProtectedExportRoute: ProtectedExportRoute,
  ProtectedForumsRoute: ProtectedForumsRoute,
  ProtectedIntelligenceRoute: ProtectedIntelligenceRoute,
  ProtectedMonitoringRoute: ProtectedMonitoringRoute,
  ProtectedMousRoute: ProtectedMousRoute,
  ProtectedOrganizationsRoute: ProtectedOrganizationsRoute,
  ProtectedReportsRoute: ProtectedReportsRoute,
  ProtectedResponsiveDemoRoute: ProtectedResponsiveDemoRoute,
  ProtectedSettingsRoute: ProtectedSettingsRoute,
  ProtectedWordAssistantRoute: ProtectedWordAssistantRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
