openapi: 3.0.0
info:
  title: Intelligence Reports API
  version: 1.0.0
  description: API for managing intelligence reports with vector embeddings and metadata

paths:
  /api/intelligence-reports:
    get:
      summary: List intelligence reports
      operationId: listIntelligenceReports
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, pending, approved, archived]
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          schema:
            type: integer
            enum: [10, 25, 50, 100]
            default: 25
      responses:
        '200':
          description: List of intelligence reports
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntelligenceReport'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
    
    post:
      summary: Create intelligence report
      operationId: createIntelligenceReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntelligenceReportInput'
      responses:
        '201':
          description: Report created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntelligenceReport'
        '400':
          $ref: '#/components/responses/ValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'

  /api/intelligence-reports/{id}:
    get:
      summary: Get intelligence report by ID
      operationId: getIntelligenceReport
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Intelligence report details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntelligenceReport'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/intelligence-reports/{id}/embedding:
    post:
      summary: Generate embedding for report
      operationId: generateEmbedding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Embedding generation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [processing]
                  message:
                    type: string
        '503':
          description: Vector service unavailable - document stored for later processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [pending_embedding]
                  message:
                    type: string

  /api/intelligence-reports/search:
    post:
      summary: Search intelligence reports with vector similarity
      operationId: searchReports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: Search query for similarity matching
                filters:
                  $ref: '#/components/schemas/SearchFilters'
                similarity_threshold:
                  type: number
                  default: 0.8
                  minimum: 0
                  maximum: 1
                timeout_ms:
                  type: integer
                  default: 2000
                  maximum: 30000
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntelligenceReport'
                  partial_results:
                    type: boolean
                    description: True if some filters timed out
                  failed_filters:
                    type: array
                    items:
                      type: string
                    description: List of filters that couldn't be applied
        '503':
          description: Fallback to keyword search - AnythingLLM unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/IntelligenceReport'
                  fallback_mode:
                    type: string
                    enum: [keyword_search, cached_results]

components:
  schemas:
    IntelligenceReport:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        title_ar:
          type: string
        content:
          type: string
        content_ar:
          type: string
        confidence_score:
          type: number
          minimum: 0
          maximum: 100
        data_sources:
          type: array
          items:
            type: string
        analysis_timestamp:
          type: string
          format: date-time
        analyst_id:
          type: string
        review_status:
          type: string
          enum: [draft, pending, approved, archived]
        threat_indicators:
          type: array
          items:
            $ref: '#/components/schemas/ThreatIndicator'
        geospatial_tags:
          type: array
          items:
            $ref: '#/components/schemas/GeoLocation'
        embedding_status:
          type: string
          enum: [pending, processing, completed, failed]
        created_at:
          type: string
          format: date-time
        archived_at:
          type: string
          format: date-time
        retention_until:
          type: string
          format: date-time

    IntelligenceReportInput:
      type: object
      required:
        - title
        - content
        - data_sources
      properties:
        title:
          type: string
        title_ar:
          type: string
        content:
          type: string
        content_ar:
          type: string
        confidence_score:
          type: number
          minimum: 0
          maximum: 100
        data_sources:
          type: array
          items:
            type: string
          minItems: 1
        threat_indicators:
          type: array
          items:
            $ref: '#/components/schemas/ThreatIndicator'
        geospatial_tags:
          type: array
          items:
            $ref: '#/components/schemas/GeoLocation'

    ThreatIndicator:
      type: object
      properties:
        indicator_type:
          type: string
        severity:
          type: string
          enum: [low, medium, high, critical]
        description:
          type: string
        description_ar:
          type: string
        confidence:
          type: number
          minimum: 0
          maximum: 100
        source_reference:
          type: string

    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
        location_name:
          type: string
        location_name_ar:
          type: string
        location_type:
          type: string
          enum: [city, region, country, coordinate]
        radius_km:
          type: number

    SearchFilters:
      type: object
      properties:
        date_range:
          type: object
          properties:
            from:
              type: string
              format: date
            to:
              type: string
              format: date
        status:
          type: array
          items:
            type: string
        priority:
          type: array
          items:
            type: string
        custom_tags:
          type: array
          items:
            type: string
        filter_logic:
          type: string
          enum: [AND, OR]
          default: AND

    Pagination:
      type: object
      properties:
        page:
          type: integer
        page_size:
          type: integer
        total_pages:
          type: integer
        total_items:
          type: integer

  responses:
    RateLimitExceeded:
      description: Rate limit exceeded
      headers:
        Retry-After:
          schema:
            type: integer
          description: Seconds until rate limit resets
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Rate limit exceeded
              retry_after:
                type: integer
                description: Seconds until rate limit resets

    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              details:
                type: object

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Resource not found