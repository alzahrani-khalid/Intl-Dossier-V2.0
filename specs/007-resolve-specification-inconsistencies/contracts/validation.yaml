openapi: 3.0.0
info:
  title: Specification Consistency Validation API
  version: 1.0.0
  description: API for validating consistency across specification documents

paths:
  /validate/consistency:
    post:
      summary: Validate consistency across specification documents
      operationId: validateConsistency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - documents
              properties:
                documents:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - path
                      - content
                    properties:
                      id:
                        type: string
                        enum: [spec, plan, tasks]
                      path:
                        type: string
                        example: /specs/006-i-need-you/spec.md
                      content:
                        type: string
                        description: Full document content
      responses:
        '200':
          description: Validation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /validate/terminology:
    post:
      summary: Validate terminology consistency
      operationId: validateTerminology
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - documents
                - terms
              properties:
                documents:
                  type: array
                  items:
                    $ref: '#/components/schemas/Document'
                terms:
                  type: array
                  items:
                    type: object
                    properties:
                      canonical:
                        type: string
                        example: shadcn/ui
                      variants:
                        type: array
                        items:
                          type: string
                        example: [shadcn, Shadcn UI]
      responses:
        '200':
          description: Terminology validation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminologyResult'

  /validate/coverage:
    post:
      summary: Validate requirement coverage by tasks
      operationId: validateCoverage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requirements
                - tasks
              properties:
                requirements:
                  type: array
                  items:
                    $ref: '#/components/schemas/Requirement'
                tasks:
                  type: array
                  items:
                    $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Coverage validation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverageResult'

components:
  schemas:
    Document:
      type: object
      properties:
        id:
          type: string
        path:
          type: string
        type:
          type: string
          enum: [specification, plan, tasks]
        content:
          type: string

    Requirement:
      type: object
      properties:
        id:
          type: string
          pattern: '^[A-Z]{2}-\d{3}$'
        key:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [functional, non-functional, edge-case]
        measurable:
          type: boolean
        metric:
          type: string

    Task:
      type: object
      properties:
        id:
          type: string
          pattern: '^T\d{3}$'
        description:
          type: string
        parallel:
          type: boolean
        phase:
          type: string
        requirementKeys:
          type: array
          items:
            type: string

    ValidationResult:
      type: object
      properties:
        valid:
          type: boolean
        issues:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              category:
                type: string
                enum: [duplication, inconsistency, ambiguity, gap, terminology]
              severity:
                type: string
                enum: [critical, high, medium, low]
              locations:
                type: array
                items:
                  type: object
                  properties:
                    document:
                      type: string
                    line:
                      type: integer
                    text:
                      type: string
              summary:
                type: string
              recommendation:
                type: string
        metrics:
          type: object
          properties:
            totalRequirements:
              type: integer
            totalTasks:
              type: integer
            coveragePercentage:
              type: number
            ambiguityCount:
              type: integer
            duplicationCount:
              type: integer
            criticalIssues:
              type: integer

    TerminologyResult:
      type: object
      properties:
        consistent:
          type: boolean
        inconsistencies:
          type: array
          items:
            type: object
            properties:
              term:
                type: string
              canonical:
                type: string
              variants:
                type: array
                items:
                  type: string
              occurrences:
                type: array
                items:
                  type: object
                  properties:
                    document:
                      type: string
                    line:
                      type: integer
                    context:
                      type: string

    CoverageResult:
      type: object
      properties:
        fullCoverage:
          type: boolean
        coveragePercentage:
          type: number
        coveredRequirements:
          type: array
          items:
            type: object
            properties:
              requirementId:
                type: string
              taskIds:
                type: array
                items:
                  type: string
        uncoveredRequirements:
          type: array
          items:
            type: string
        unmappedTasks:
          type: array
          items:
            type: string

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object