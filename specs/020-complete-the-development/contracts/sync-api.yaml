openapi: 3.1.0
info:
  title: Mobile Sync API
  version: 1.0.0
  description: |
    Incremental sync API for mobile offline-first architecture. Supports delta queries,
    optimistic locking, and hybrid conflict resolution.

servers:
  - url: https://zkrcjzdemdmwhearhfgg.supabase.co/functions/v1
    description: Supabase Edge Functions (Staging)

security:
  - BearerAuth: []

paths:
  /sync-incremental:
    post:
      summary: Incremental Sync (Delta Query)
      description: |
        Fetches entities changed since last sync timestamp. Returns created, updated, and
        deleted entities with server version for conflict detection.
      operationId: syncIncremental
      tags:
        - Sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - last_sync_timestamp
                - entity_types
              properties:
                last_sync_timestamp:
                  type: string
                  format: date-time
                  description: ISO 8601 timestamp of last successful sync
                  example: "2025-10-11T14:30:00Z"
                entity_types:
                  type: array
                  items:
                    type: string
                    enum:
                      - intake_tickets
                      - dossiers
                      - assignments
                      - kanban_cards
                      - search_index
                      - network_nodes
                      - notifications
                  description: List of entity types to sync
                  example: ["intake_tickets", "assignments"]
                user_id:
                  type: string
                  format: uuid
                  description: User ID for filtering user-specific entities (assignments, drafts)
      responses:
        '200':
          description: Successful sync response with delta
          content:
            application/json:
              schema:
                type: object
                properties:
                  sync_timestamp:
                    type: string
                    format: date-time
                    description: Server timestamp for next incremental sync
                  delta:
                    type: object
                    properties:
                      created:
                        type: array
                        items:
                          $ref: '#/components/schemas/SyncEntity'
                      updated:
                        type: array
                        items:
                          $ref: '#/components/schemas/SyncEntity'
                      deleted:
                        type: array
                        items:
                          type: object
                          properties:
                            entity_type:
                              type: string
                            entity_id:
                              type: string
                              format: uuid
                            deleted_at:
                              type: string
                              format: date-time
              example:
                sync_timestamp: "2025-10-12T10:00:00Z"
                delta:
                  created:
                    - entity_type: "intake_tickets"
                      entity_id: "550e8400-e29b-41d4-a716-446655440000"
                      data:
                        ticket_number: "INT-2025-001234"
                        request_type: "engagement"
                        title_ar: "طلب تعاون جديد"
                        title_en: "New collaboration request"
                        sensitivity: "internal"
                        urgency: "high"
                      _version: 1
                      _updated_at: "2025-10-12T09:45:00Z"
                  updated:
                    - entity_type: "assignments"
                      entity_id: "660e8400-e29b-41d4-a716-446655440001"
                      data:
                        status: "in_progress"
                        sla_elapsed_percent: 65
                      _version: 3
                      _updated_at: "2025-10-12T09:50:00Z"
                  deleted:
                    - entity_type: "kanban_cards"
                      entity_id: "770e8400-e29b-41d4-a716-446655440002"
                      deleted_at: "2025-10-12T09:55:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /sync-push:
    post:
      summary: Push Local Changes
      description: |
        Pushes local CUD operations to server. Validates data, applies to PostgreSQL,
        detects conflicts via version mismatch, returns server metadata.
      operationId: syncPush
      tags:
        - Sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - operations
              properties:
                operations:
                  type: array
                  items:
                    $ref: '#/components/schemas/SyncOperation'
                  maxItems: 100
                  description: Batch of local changes (max 100 per request)
      responses:
        '200':
          description: Successful push with server acknowledgment
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        operation_id:
                          type: string
                          description: Client-provided operation ID
                        status:
                          type: string
                          enum: [success, conflict, validation_error]
                        server_version:
                          type: integer
                          description: New version after successful update
                        server_updated_at:
                          type: string
                          format: date-time
                        conflict_data:
                          $ref: '#/components/schemas/ConflictData'
                        error:
                          type: string
                          description: Error message if status != success
              example:
                results:
                  - operation_id: "op-1"
                    status: "success"
                    server_version: 4
                    server_updated_at: "2025-10-12T10:00:00Z"
                  - operation_id: "op-2"
                    status: "conflict"
                    conflict_data:
                      entity_type: "kanban_cards"
                      entity_id: "770e8400-e29b-41d4-a716-446655440002"
                      client_version: 2
                      server_version: 3
                      conflicting_fields:
                        - field: "column_id"
                          client_value: "in_progress"
                          server_value: "review"
                          last_modified_by: "admin@stats.gov.sa"
                          last_modified_at: "2025-10-12T09:58:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          description: Payload too large (>100 operations)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /sync-resolve-conflict:
    post:
      summary: Resolve Sync Conflict
      description: |
        User-initiated conflict resolution. Applies selected version (local or server),
        increments version, logs resolution to audit trail.
      operationId: syncResolveConflict
      tags:
        - Sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - entity_type
                - entity_id
                - resolution_type
                - selected_data
              properties:
                entity_type:
                  type: string
                  example: "kanban_cards"
                entity_id:
                  type: string
                  format: uuid
                  example: "770e8400-e29b-41d4-a716-446655440002"
                client_version:
                  type: integer
                  description: Client's version before resolution
                  example: 2
                server_version:
                  type: integer
                  description: Server's version before resolution
                  example: 3
                resolution_type:
                  type: string
                  enum: [use_local, use_server, manual_merge]
                  description: How conflict was resolved
                  example: "use_server"
                selected_data:
                  type: object
                  description: Final resolved data to apply
                  example:
                    column_id: "review"
                    position: 2
                    last_moved_by_id: "admin-user-id"
                resolution_reason:
                  type: string
                  maxLength: 500
                  description: Optional user explanation for audit trail
                  example: "Server version has manager approval, using that"
      responses:
        '200':
          description: Conflict resolved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity_id:
                    type: string
                    format: uuid
                  new_version:
                    type: integer
                  updated_at:
                    type: string
                    format: date-time
                  audit_log_id:
                    type: string
                    format: uuid
                    description: ID of audit log entry for this resolution
              example:
                entity_id: "770e8400-e29b-41d4-a716-446655440002"
                new_version: 4
                updated_at: "2025-10-12T10:05:00Z"
                audit_log_id: "880e8400-e29b-41d4-a716-446655440003"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /sync-full:
    post:
      summary: Full Sync (Initial Sync)
      description: |
        Full sync for first app launch. Fetches all user-accessible entities in batches
        of 100. Used when last_sync_timestamp is null or very old (>7 days).
      operationId: syncFull
      tags:
        - Sync
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - entity_types
              properties:
                entity_types:
                  type: array
                  items:
                    type: string
                    enum:
                      - intake_tickets
                      - dossiers
                      - assignments
                      - kanban_cards
                      - search_index
                      - network_nodes
                  description: List of entity types to sync
                user_id:
                  type: string
                  format: uuid
                  description: User ID for filtering user-specific entities
                batch_size:
                  type: integer
                  minimum: 10
                  maximum: 100
                  default: 100
                  description: Number of entities per batch
                offset:
                  type: integer
                  minimum: 0
                  default: 0
                  description: Pagination offset for batched loading
      responses:
        '200':
          description: Successful full sync batch response
          content:
            application/json:
              schema:
                type: object
                properties:
                  sync_timestamp:
                    type: string
                    format: date-time
                  entities:
                    type: array
                    items:
                      $ref: '#/components/schemas/SyncEntity'
                  has_more:
                    type: boolean
                    description: True if more batches available
                  total_count:
                    type: integer
                    description: Total entities across all batches
                  next_offset:
                    type: integer
                    description: Offset for next batch request
              example:
                sync_timestamp: "2025-10-12T10:10:00Z"
                entities:
                  - entity_type: "dossiers"
                    entity_id: "990e8400-e29b-41d4-a716-446655440004"
                    data:
                      title_ar: "المملكة العربية السعودية"
                      title_en: "Kingdom of Saudi Arabia"
                      type: "country"
                      status: "active"
                    _version: 12
                    _updated_at: "2025-10-11T15:30:00Z"
                has_more: true
                total_count: 450
                next_offset: 100
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Supabase JWT access token

  schemas:
    SyncEntity:
      type: object
      required:
        - entity_type
        - entity_id
        - data
        - _version
        - _updated_at
      properties:
        entity_type:
          type: string
          enum:
            - intake_tickets
            - dossiers
            - assignments
            - kanban_cards
            - search_index
            - network_nodes
            - notifications
        entity_id:
          type: string
          format: uuid
        data:
          type: object
          description: Entity-specific data (varies by entity_type)
        _version:
          type: integer
          minimum: 1
          description: Optimistic locking version
        _updated_at:
          type: string
          format: date-time
          description: Server timestamp of last update

    SyncOperation:
      type: object
      required:
        - operation_id
        - operation
        - entity_type
        - entity_id
        - data
      properties:
        operation_id:
          type: string
          description: Client-generated unique ID for operation tracking
          example: "op-1"
        operation:
          type: string
          enum: [create, update, delete]
        entity_type:
          type: string
          example: "intake_tickets"
        entity_id:
          type: string
          format: uuid
        data:
          type: object
          description: Entity data to create/update
        client_version:
          type: integer
          description: Required for update/delete to detect conflicts
          example: 2

    ConflictData:
      type: object
      required:
        - entity_type
        - entity_id
        - client_version
        - server_version
        - conflicting_fields
      properties:
        entity_type:
          type: string
        entity_id:
          type: string
          format: uuid
        client_version:
          type: integer
        server_version:
          type: integer
        conflicting_fields:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Field name with conflict
              client_value:
                type: string
                description: Value from client
              server_value:
                type: string
                description: Value from server
              last_modified_by:
                type: string
                description: Email of user who last modified server value
              last_modified_at:
                type: string
                format: date-time

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: "VALIDATION_ERROR"
        message:
          type: string
          example: "Invalid entity_type: 'invalid_type'"
        details:
          type: object
          description: Additional error context

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "VALIDATION_ERROR"
            message: "Invalid entity_type: must be one of [intake_tickets, dossiers, assignments, kanban_cards, search_index, network_nodes, notifications]"

    Unauthorized:
      description: Invalid or expired JWT token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "UNAUTHORIZED"
            message: "Invalid or expired access token"

    RateLimited:
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "RATE_LIMITED"
            message: "Too many sync requests. Retry after 60 seconds."
      headers:
        Retry-After:
          schema:
            type: integer
          description: Seconds until rate limit resets

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "INTERNAL_ERROR"
            message: "An unexpected error occurred. Please try again."
